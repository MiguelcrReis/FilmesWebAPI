API -> Application Programming Interface.

Clientes enviam requisições para a API, ao invés de enviar para o servidor/banco de dados diretamente.

REST -> Padrão arquitetural que visa padronizar os meios de tráfego de dados.

RESTful -> API que implementa o conceito da arquitetura REST.  

API resumidamente -> Uma API visa disponibilizar informações para outras aplicações. Para consumir os seus recursos é necessário seguir um conjunto de regras estabelecidas. Abstrai detalhes de implementação. Controla o que pode/deve ser acessado. Facilitar o consumo e disponibilização de dados e padronização.

Controllers são a porta de entrada da nossa API.

Vantagem de utilizar DbContext para acessar o banco de dados -> abstrair a lógica de acesso ao banco de dados (menos esforço para acessar o db).


obs: sempre que adicionar algum dado ao banco, é necessário salvar a alteração/inserção, exemplo:
_context.Filmes.Add(filme);
_context.SaveChanges();


DTOs trazem diversas vantagens relacionadas a organização de código. Além disso, utilizando DTOs, conseguimos ter um maior controle em nossas requisições e respostas. 
Com DTOs podemos definir os parâmetros enviados de maneira isolada do nosso modelo do banco de dados.
Há parâmetros que não precisamos enviar, como por exemplo o id. Outro fator é que não estamos mais o nosso modelo do banco de dados.


### Resumo Capitulo 4: 

O DbContext serve como ponte e para fazer operações no banco. 
DTOs nos ajudam a não deixar nosso modelo de banco de dados exposto.


______________________________

Retorno de atualização utilizando verbo PUT -> 204 (No Content)


O PATCH é uma outra alternativa de verbo HTTP usado para atualizar recursos em nossa base. Não é necessário enviar o objeto completo. Apenas os campos que serão atualizados, exemplo:

[
    {
        "op": "replace",
        "path": "/titulo",
        "value": "As aventuras de Miguel Reis"
    }
]

Como o exemplo a cima mostra, para utilizar o verbo PATCH é necessário fazer uma requisição mais complexa, porém, permite a atualização parcial de dados.

Onde "op" é a operação a ser feita, no caso um replace.
"path", é caminho do dado que irá ser feito o replace, no caso o titulo do Filme.
E "value" é o valor a ser inserido no lugar no dado que já está no campo titulo.


### Resumo do Capitulo 5

O verbo PUT pode ser utilizado quando queremos atualizar algum recurso no sistema.
O verbo PATCH também pode ser utilizado para atualizações, porém de maneira parcial.
Apesar do verbo PATCH não exigir a passagem completa do objeto a ser atualizado, exige uma configuração mais complexa.
O verbo DELETE deve ser utilizado quando queremos deletar um recurso no sistema.
Quando um recurso é atualizado ou removido com sucesso, devemos retornar status 204 (No Content).



